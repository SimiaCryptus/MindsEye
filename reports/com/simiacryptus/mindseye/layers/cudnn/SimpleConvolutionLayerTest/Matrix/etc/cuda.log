289.150080: cudaSetDevice(0) = 0
289.150107: cudnnCreateTensorDescriptor(cudnnTensorDescriptor[nativePointer=0x8951d72b0]) = 0
289.150116: cudnnSetTensor4dDescriptor(cudnnTensorDescriptor[nativePointer=0x8951d72b0], 0, 1, 1, 1, 3, 3) = 0
289.150127: cudnnCreateFilterDescriptor(cudnnFilterDescriptor[nativePointer=0x89519fed0]) = 0
289.150133: cudnnSetFilter4dDescriptor(cudnnFilterDescriptor[nativePointer=0x89519fed0], 1, 0, 1, 1, 3, 3) = 0
289.150137: cudnnCreateTensorDescriptor(cudnnTensorDescriptor[nativePointer=0x8951d6f30]) = 0
289.150141: cudnnSetTensor4dDescriptor(cudnnTensorDescriptor[nativePointer=0x8951d6f30], 0, 1, 1, 1, 3, 3) = 0
289.150145: cudnnCreateConvolutionDescriptor(cudnnConvolutionDescriptor[nativePointer=0x8951d6980]) = 0
289.150157: cudnnSetConvolutionNdDescriptor(cudnnConvolutionDescriptor[nativePointer=0x8951d6980], 2, [1, 1], [1, 1], [1, 1], 0, 1) = 0
289.150220: cudaMalloc(Pointer[nativePointer=0x2109613c00,byteOffset=0], 72) = 0
289.150238: cudaMemset(Pointer[nativePointer=0x2109613c00,byteOffset=0], 0, 72) = 0
289.150330: cudaMemcpy(Pointer[nativePointer=0x2109613c00,byteOffset=0], Pointer[buffer=java.nio.HeapDoubleBuffer[pos=0 lim=9 cap=9],byteOffset=0], 72, 1) = 0
289.150353: cudaMalloc(Pointer[nativePointer=0x2109613e00,byteOffset=0], 72) = 0
289.150361: cudaMemset(Pointer[nativePointer=0x2109613e00,byteOffset=0], 0, 72) = 0
289.150454: cudaMemcpy(Pointer[nativePointer=0x2109613e00,byteOffset=0], Pointer[buffer=java.nio.HeapDoubleBuffer[pos=0 lim=9 cap=9],byteOffset=0], 72, 1) = 0
289.150476: cudaMalloc(Pointer[nativePointer=0x2109614000,byteOffset=0], 72) = 0
289.150483: cudaMemset(Pointer[nativePointer=0x2109614000,byteOffset=0], 0, 72) = 0
289.150493: cudnnGetConvolutionNdForwardOutputDim(cudnnConvolutionDescriptor[nativePointer=0x8951d6980], cudnnTensorDescriptor[nativePointer=0x8951d72b0], cudnnFilterDescriptor[nativePointer=0x89519fed0], 4, [1, 1, 3, 3]) = 0
289.150514: cudnnGetConvolutionForwardAlgorithm(cudnnHandle[nativePointer=0x537b0b10], cudnnTensorDescriptor[nativePointer=0x8951d72b0], cudnnFilterDescriptor[nativePointer=0x89519fed0], cudnnConvolutionDescriptor[nativePointer=0x8951d6980], cudnnTensorDescriptor[nativePointer=0x8951d6f30], 1, 0, [2]) = 0
289.150525: cudnnGetConvolutionForwardWorkspaceSize(cudnnHandle[nativePointer=0x537b0b10], cudnnTensorDescriptor[nativePointer=0x8951d72b0], cudnnFilterDescriptor[nativePointer=0x89519fed0], cudnnConvolutionDescriptor[nativePointer=0x8951d6980], cudnnTensorDescriptor[nativePointer=0x8951d6f30], 2, [648]) = 0
289.150542: cudaMalloc(Pointer[nativePointer=0x2109614200,byteOffset=0], 648) = 0
289.150549: cudaMemset(Pointer[nativePointer=0x2109614200,byteOffset=0], 0, 648) = 0
289.150660: cudnnConvolutionForward(cudnnHandle[nativePointer=0x537b0b10], Pointer[buffer=java.nio.HeapDoubleBuffer[pos=0 lim=1 cap=1],byteOffset=0], cudnnTensorDescriptor[nativePointer=0x8951d72b0], Pointer[nativePointer=0x2109613e00,byteOffset=0], cudnnFilterDescriptor[nativePointer=0x89519fed0], Pointer[nativePointer=0x2109613c00,byteOffset=0], cudnnConvolutionDescriptor[nativePointer=0x8951d6980], 2, Pointer[nativePointer=0x2109614200,byteOffset=0], 648, Pointer[buffer=java.nio.HeapDoubleBuffer[pos=0 lim=1 cap=1],byteOffset=0], cudnnTensorDescriptor[nativePointer=0x8951d6f30], Pointer[nativePointer=0x2109614000,byteOffset=0]) = 0
289.150778: cudaFree(Pointer[nativePointer=0x2109614200,byteOffset=0]) = 0
289.150858: cudaMemcpy(Pointer[buffer=java.nio.HeapDoubleBuffer[pos=0 lim=9 cap=9],byteOffset=0], Pointer[nativePointer=0x2109614000,byteOffset=0], 72, 2) = 0
289.150879: cudaSetDevice(0) = 0
289.150898: cudaMalloc(Pointer[nativePointer=0x2109614200,byteOffset=0], 72) = 0
289.150907: cudaMemset(Pointer[nativePointer=0x2109614200,byteOffset=0], 0, 72) = 0
289.150952: cudaMemcpy(Pointer[nativePointer=0x2109614200,byteOffset=0], Pointer[buffer=java.nio.HeapDoubleBuffer[pos=0 lim=9 cap=9],byteOffset=0], 72, 1) = 0
289.150973: cudaMalloc(Pointer[nativePointer=0x2109614400,byteOffset=0], 72) = 0
289.150981: cudaMemset(Pointer[nativePointer=0x2109614400,byteOffset=0], 0, 72) = 0
289.150998: cudnnGetConvolutionBackwardFilterAlgorithm(cudnnHandle[nativePointer=0x537b0b10], cudnnTensorDescriptor[nativePointer=0x8951d72b0], cudnnTensorDescriptor[nativePointer=0x8951d6f30], cudnnConvolutionDescriptor[nativePointer=0x8951d6980], cudnnFilterDescriptor[nativePointer=0x89519fed0], 1, 0, [3]) = 0
289.151007: cudnnGetConvolutionBackwardFilterWorkspaceSize(cudnnHandle[nativePointer=0x537b0b10], cudnnTensorDescriptor[nativePointer=0x8951d72b0], cudnnTensorDescriptor[nativePointer=0x8951d6f30], cudnnConvolutionDescriptor[nativePointer=0x8951d6980], cudnnFilterDescriptor[nativePointer=0x89519fed0], 3, [0]) = 0
289.151012: cudaMalloc(Pointer[nativePointer=0x0,byteOffset=0], 0) = 0
289.151015: cudaMemset(Pointer[nativePointer=0x0,byteOffset=0], 0, 0) = 0
289.151107: cudnnConvolutionBackwardFilter(cudnnHandle[nativePointer=0x537b0b10], Pointer[buffer=java.nio.HeapDoubleBuffer[pos=0 lim=1 cap=1],byteOffset=0], cudnnTensorDescriptor[nativePointer=0x8951d72b0], Pointer[nativePointer=0x2109613e00,byteOffset=0], cudnnTensorDescriptor[nativePointer=0x8951d6f30], Pointer[nativePointer=0x2109614200,byteOffset=0], cudnnConvolutionDescriptor[nativePointer=0x8951d6980], 3, Pointer[nativePointer=0x0,byteOffset=0], 0, Pointer[buffer=java.nio.HeapDoubleBuffer[pos=0 lim=1 cap=1],byteOffset=0], cudnnFilterDescriptor[nativePointer=0x89519fed0], Pointer[nativePointer=0x2109614400,byteOffset=0]) = 0
289.151118: cudaFree(Pointer[nativePointer=0x0,byteOffset=0]) = 0
289.151273: cudaMemcpy(Pointer[buffer=java.nio.HeapDoubleBuffer[pos=0 lim=9 cap=9],byteOffset=0], Pointer[nativePointer=0x2109614400,byteOffset=0], 72, 2) = 0
289.151300: cudaMalloc(Pointer[nativePointer=0x2109614600,byteOffset=0], 72) = 0
289.151307: cudaMemset(Pointer[nativePointer=0x2109614600,byteOffset=0], 0, 72) = 0
289.151347: cudnnGetConvolutionBackwardDataAlgorithm(cudnnHandle[nativePointer=0x537b0b10], cudnnFilterDescriptor[nativePointer=0x89519fed0], cudnnTensorDescriptor[nativePointer=0x8951d72b0], cudnnConvolutionDescriptor[nativePointer=0x8951d6980], cudnnTensorDescriptor[nativePointer=0x8951d6f30], 1, 0, [0]) = 0
289.151373: cudnnGetConvolutionBackwardDataWorkspaceSize(cudnnHandle[nativePointer=0x537b0b10], cudnnFilterDescriptor[nativePointer=0x89519fed0], cudnnTensorDescriptor[nativePointer=0x8951d6f30], cudnnConvolutionDescriptor[nativePointer=0x8951d6980], cudnnTensorDescriptor[nativePointer=0x8951d72b0], 0, [0]) = 0
289.151386: cudaMalloc(Pointer[nativePointer=0x0,byteOffset=0], 0) = 0
289.151390: cudaMemset(Pointer[nativePointer=0x0,byteOffset=0], 0, 0) = 0
289.151453: cudnnConvolutionBackwardData(cudnnHandle[nativePointer=0x537b0b10], Pointer[buffer=java.nio.HeapDoubleBuffer[pos=0 lim=1 cap=1],byteOffset=0], cudnnFilterDescriptor[nativePointer=0x89519fed0], Pointer[nativePointer=0x2109613c00,byteOffset=0], cudnnTensorDescriptor[nativePointer=0x8951d6f30], Pointer[nativePointer=0x2109614200,byteOffset=0], cudnnConvolutionDescriptor[nativePointer=0x8951d6980], 0, Pointer[nativePointer=0x0,byteOffset=0], 0, Pointer[buffer=java.nio.HeapDoubleBuffer[pos=0 lim=1 cap=1],byteOffset=0], cudnnTensorDescriptor[nativePointer=0x8951d72b0], Pointer[nativePointer=0x2109614600,byteOffset=0]) = 0
289.151638: cudaMemcpy(Pointer[buffer=java.nio.HeapDoubleBuffer[pos=0 lim=9 cap=9],byteOffset=0], Pointer[nativePointer=0x2109614600,byteOffset=0], 72, 2) = 0
